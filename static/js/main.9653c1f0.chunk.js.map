{"version":3,"sources":["components/Theme/Theme.js","components/BookStore/AddBook.js","components/BookStore/EditBook.js","components/BookStore/BookStore.js","App.js","reportWebVitals.js","index.js","database/BookList.js"],"names":["theme","dark","backgroundColor","color","light","ThemeContext","React","createContext","AddBook","state","id","uuidv4","name","price","category","description","err","baseState","changeHandler","e","target","value","setState","AddNewBook","preventDefault","Database","data","push","props","refresh","cancelHandler","this","isAdd","mode","className","placeholder","type","onChange","onClick","Component","EditBook","database","editHandler","forEach","item","isEdit","BookStore","booklist","filteredId","checked","getDatabase","addToBookList","editToBookList","itemId","deleteFromBookList","delItem","splice","handleChange","newTheme","context","style","map","index","find","findItem","contextType","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Provider","document","getElementById","exports"],"mappings":"2QAEaA,EAAQ,CACjBC,KAAM,CACFC,gBAAiB,UACjBC,MAAO,WAEXC,MAAO,CACHF,gBAAiB,UACjBC,MAAO,YAIFE,EAAeC,IAAMC,cAAcP,EAAMI,O,gCCyGvCI,E,4MA/GXC,MAAQ,CACJC,GAAIC,cACJC,KAAM,GACNC,MAAO,EACPC,SAAU,WACVC,YAAa,GACbC,KAAK,G,EAGTC,UAAY,EAAKR,M,EAGjBS,cAAgB,SAACC,GACb,IAAMP,EAAOO,EAAEC,OAAOR,KAChBS,EAAQF,EAAEC,OAAOC,MAEvB,EAAKC,SAAL,eACKV,EAAOS,K,EAIhBE,WAAa,SAACJ,GACVA,EAAEK,iBACF,IAAMZ,EAAOO,EAAEC,OAAOR,KAChBS,EAAQF,EAAEC,OAAOC,MAEvB,EAAKC,SAAL,eACKV,EAAOS,IAGY,KAApB,EAAKZ,MAAMG,MAAoC,KAArB,EAAKH,MAAMI,OAA2C,KAA3B,EAAKJ,MAAMM,YAChE,EAAKO,SAAS,CAAEN,KAAK,KAErB,EAAKM,SAAS,CAAEN,KAAK,IACrBS,IAASC,KAAKC,KAAK,CACfjB,GAAI,EAAKD,MAAMC,GACfE,KAAM,EAAKH,MAAMG,KACjBC,MAAO,EAAKJ,MAAMI,MAClBC,SAAU,EAAKL,MAAMK,SACrBC,YAAa,EAAKN,MAAMM,cAE5B,EAAKO,SAAS,EAAKL,WACnB,EAAKW,MAAMC,Y,EAInBC,cAAgB,WACZ,EAAKR,SAAS,EAAKL,WACnB,EAAKW,MAAMC,W,uDAGL,IAAD,EAC+CE,KAAKtB,MAAjDG,EADH,EACGA,KAAMC,EADT,EACSA,MAAOC,EADhB,EACgBA,SAAUC,EAD1B,EAC0BA,YAAaC,EADvC,EACuCA,IADvC,EAEmBe,KAAKH,MAArBI,EAFH,EAEGA,MAAOC,EAFV,EAEUA,KACf,QAAKD,GAID,mCACI,uBAAME,UAAU,cAAhB,UACMlB,EAAQ,mBAAGkB,UAAU,MAAb,4CAAyD,GACnE,2BAAUA,UAAU,aAApB,UACI,wBAAQA,UAAU,cAAlB,0BACA,uBACIA,UAAS,uBAA4B,UAATD,EAAoB,GAAK,UACrDE,YAAY,OACZC,KAAK,OACLxB,KAAK,OACLS,MAAOT,GAAQ,GACfyB,SAAUN,KAAKb,gBAEnB,uBACIgB,UAAS,uBAA4B,UAATD,EAAoB,GAAK,UACrDG,KAAK,SACLD,YAAY,QACZvB,KAAK,QACLS,MAAOR,GAAS,GAChBwB,SAAUN,KAAKb,gBAEnB,yBACIgB,UAAS,uBAA4B,UAATD,EAAoB,GAAK,UACrDG,KAAK,OACLxB,KAAK,WACLS,MAAOP,GAAY,GACnBuB,SAAUN,KAAKb,cALnB,UAMI,wBAAQG,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,cAAd,2BAEJ,0BACIa,UAAS,uBAA4B,UAATD,EAAoB,GAAK,SAA5C,oBACTE,YAAY,4BACZC,KAAK,OACLxB,KAAK,cACLS,MAAON,GAAe,GACtBsB,SAAUN,KAAKb,gBAGnB,wBAAQgB,UAAU,YAAYE,KAAK,SAASE,QAASP,KAAKR,WAA1D,sBACA,wBAAQW,UAAU,eAAeE,KAAK,QAAQE,QAASP,KAAKD,cAA5D,gC,GAxGFS,aCmGPC,E,4MAnGX/B,MAAQ,CACJC,GAAI,EAAKkB,MAAMa,SAAS/B,GACxBE,KAAM,EAAKgB,MAAMa,SAAS7B,KAC1BC,MAAO,EAAKe,MAAMa,SAAS5B,MAC3BC,SAAU,EAAKc,MAAMa,SAAS3B,SAC9BC,YAAa,EAAKa,MAAMa,SAAS1B,YACjCC,KAAK,G,EAGTE,cAAgB,SAACC,GACb,IAAMP,EAAOO,EAAEC,OAAOR,KAChBS,EAAQF,EAAEC,OAAOC,MAEvB,EAAKC,SAAL,eACKV,EAAOS,K,EAIhBqB,YAAc,SAACvB,GACXA,EAAEK,iBACF,IAAMZ,EAAOO,EAAEC,OAAOR,KAChBS,EAAQF,EAAEC,OAAOC,MAEvB,EAAKC,SAAL,eACKV,EAAOS,IAEY,KAApB,EAAKZ,MAAMG,MAAoC,KAArB,EAAKH,MAAMI,OAA2C,KAA3B,EAAKJ,MAAMM,YAChE,EAAKO,SAAS,CAAEN,KAAK,KAErB,EAAKM,SAAS,CAAEN,KAAK,IACrBS,IAASC,KAAKiB,SAAQ,SAAAC,GACdA,EAAKlC,KAAO,EAAKD,MAAMC,KACvBkC,EAAKhC,KAAO,EAAKH,MAAMG,KACvBgC,EAAK/B,MAAQ,EAAKJ,MAAMI,MACxB+B,EAAK9B,SAAW,EAAKL,MAAMK,SAC3B8B,EAAK7B,YAAc,EAAKN,MAAMM,gBAGtC,EAAKa,MAAMC,Y,uDAIT,IAAD,EAC+CE,KAAKtB,MAAjDG,EADH,EACGA,KAAMC,EADT,EACSA,MAAOC,EADhB,EACgBA,SAAUC,EAD1B,EAC0BA,YAAaC,EADvC,EACuCA,IADvC,EAE6Be,KAAKH,MAA/BiB,EAFH,EAEGA,OAAQhB,EAFX,EAEWA,QAASI,EAFpB,EAEoBA,KACzB,QAAKY,GAID,mCACI,uBAAMX,UAAU,cAAhB,UACMlB,EAAQ,mBAAGkB,UAAU,MAAb,4CAAyD,GACnE,2BAAUA,UAAU,aAApB,UACI,wBAAQA,UAAU,cAAlB,gCACA,uBACIA,UAAS,uBAA4B,UAATD,EAAoB,GAAK,UACrDG,KAAK,OACLD,YAAY,OACZvB,KAAK,OACLS,MAAOT,GAAQ,GACfyB,SAAUN,KAAKb,gBACnB,uBACIgB,UAAS,uBAA4B,UAATD,EAAoB,GAAK,UACrDG,KAAK,SACLD,YAAY,QACZvB,KAAK,QACLS,MAAOR,GAAS,GAChBwB,SAAUN,KAAKb,gBACnB,yBACIgB,UAAS,uBAA4B,UAATD,EAAoB,GAAK,UACrDG,KAAK,OACLxB,KAAK,WACLS,MAAOP,GAAY,GACnBuB,SAAUN,KAAKb,cALnB,UAMI,wBAAQG,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,cAAd,2BAEJ,0BACIa,UAAS,uBAA4B,UAATD,EAAoB,GAAK,SAA5C,mBACTG,KAAK,OACLD,YAAY,4BACZvB,KAAK,cACLS,MAAON,GAAe,GACtBsB,SAAUN,KAAKb,gBAEnB,wBAAQgB,UAAU,YAAYE,KAAK,SAASE,QAASP,KAAKW,YAA1D,kBACA,wBAAQR,UAAU,eAAeE,KAAK,SAASE,QAAST,EAAxD,gC,GA5FDU,aCKjBO,G,kNAIFrC,MAAQ,CACJsC,SAAU,GACVf,MAAO,KACPa,OAAQ,KACRG,WAAY,KACZC,SAAS,EACThB,KAAM,S,EAGViB,YAAc,WACV,EAAK5B,SAAS,CACVyB,SAAUtB,IAASC,KACnBM,OAAO,EACPa,QAAQ,EACRG,WAAY,M,EAIpBG,cAAgB,WACZ,EAAK7B,SAAS,CACVU,OAAO,K,EAIfoB,eAAiB,SAACC,GACd,EAAK/B,SAAS,CACVuB,QAAQ,EACRG,WAAYK,K,EAIpBC,mBAAqB,SAACC,GAClB9B,IAASC,KAAK8B,OAAOD,EAAS,GAC9B,EAAKL,e,EAGTO,aAAe,SAACR,IACI,IAAZA,EACA,EAAK3B,SAAS,CAAE2B,UAAShB,KAAM,SAE/B,EAAKX,SAAS,CAAE2B,UAAShB,KAAM,W,kEAKnCF,KAAKmB,gB,+BAIC,IAAD,SACiDnB,KAAKtB,MAAnDsC,EADH,EACGA,SAAUf,EADb,EACaA,MAAOa,EADpB,EACoBA,OAAQG,EAD5B,EAC4BA,WAAYf,EADxC,EACwCA,KACvCyB,EAAW3B,KAAK4B,QAAQ3D,MAAMiC,GACpC,OACI,sBAAKC,UAAU,YAAY0B,MAAOF,EAAlC,UACI,yBAAQxB,UAAS,sBAA2B,UAATD,EAAoB,GAAK,UAA5D,UACI,oBAAIC,UAAU,gBAAd,uCACA,sBAAKA,UAAU,eAAf,UACI,oBAAIA,UAAU,sBAAd,wBACA,cAAC,IAAD,CAAQG,SAAUN,KAAK0B,aAAcR,QAASlB,KAAKtB,MAAMwC,gBAGjE,uBAAMf,UAAU,OAAhB,UACI,0BAASA,UAAU,iBAAnB,UACI,wBAAQA,UAAU,WAAWI,QAASP,KAAKoB,cAA3C,eACA,cAAC,EAAD,CAASnB,MAAOA,EAAOH,QAASE,KAAKmB,YAAajB,KAAMA,OAE5D,0BAASC,UAAS,wBAA6B,UAATD,EAAoB,GAAK,UAA/D,UACI,qBAAIC,UAAU,qBAAd,UACI,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,sBACA,oBAAIA,UAAU,cAAd,0BAEHa,EAASc,KAAI,SAACjB,EAAMkB,GACjB,OACI,qBAAI5B,UAAU,QAAd,UACI,oBAAIA,UAAU,cAAd,SACI,wBAAQA,UAAU,YAAYI,QAAS,kBAAM,EAAKc,eAAeR,EAAKlC,KAAtE,SAA4EkC,EAAKhC,SAErF,oBAAIsB,UAAU,cAAd,SAA6B,IAAMU,EAAK/B,QACxC,oBAAIqB,UAAU,cAAd,SAA6BU,EAAK9B,WAClC,oBAAIoB,UAAU,cAAd,SACI,wBAAQA,UAAU,cAAcI,QAAS,kBAAM,EAAKgB,mBAAmBQ,IAAvE,wBAPmBA,MAaf,OAAfd,GAAsC,KAAfA,EACpB,cAAC,EAAD,CAAUH,OAAQA,EAAQJ,SAAUM,EAASgB,MAAK,SAAAC,GAAQ,OAAIA,EAAStD,KAAOsC,KAAanB,QAASE,KAAKmB,YAAajB,KAAMA,IAC3H,gB,GA9FTM,cAAlBO,EAEKmB,YAAc5D,EAuGVyC,QCnGAoB,EAVH,WAEV,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAM,IAAKC,UAAWtB,OCIpBuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC3E,EAAa4E,SAAd,CAAuB5D,MAAO,CAAErB,SAAhC,SACE,cAAC,EAAD,QAGJkF,SAASC,eAAe,SAM1Bd,K,gBCnBAe,EAAQ1D,KAAO,CAEX,CACI,GAAM,IACN,KAAQ,aACR,MAAS,QACT,SAAY,cACZ,YAAgB,yGAEpB,CACI,GAAM,IACN,KAAQ,sBACR,MAAS,QACT,SAAY,cACZ,YAAgB,wHAEpB,CACI,GAAM,IACN,KAAQ,aACR,MAAS,QACT,SAAY,cACZ,YAAgB,8D","file":"static/js/main.9653c1f0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const theme = {\r\n    dark: {\r\n        backgroundColor: \"#323232\",\r\n        color: \"#f1f1f1\"\r\n    },\r\n    light: {\r\n        backgroundColor: \"#f1f1f1\",\r\n        color: \"#323232\"\r\n    },\r\n}\r\n\r\nexport const ThemeContext = React.createContext(theme.light);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport Database from \"../../database/BookList\";\r\n\r\n\r\nclass AddBook extends Component {\r\n\r\n    state = {\r\n        id: uuidv4(),\r\n        name: \"\",\r\n        price: 0.00,\r\n        category: \"classics\",\r\n        description: \"\",\r\n        err: false,\r\n    }\r\n\r\n    baseState = this.state;\r\n\r\n\r\n    changeHandler = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    AddNewBook = (e) => {\r\n        e.preventDefault();\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n        if (this.state.name === \"\" || this.state.price === \"\" || this.state.description === \"\") {\r\n            this.setState({ err: true })\r\n        } else {\r\n            this.setState({ err: false })\r\n            Database.data.push({\r\n                id: this.state.id,\r\n                name: this.state.name,\r\n                price: this.state.price,\r\n                category: this.state.category,\r\n                description: this.state.description\r\n            })\r\n            this.setState(this.baseState);\r\n            this.props.refresh();\r\n        }\r\n    }\r\n\r\n    cancelHandler = () => {\r\n        this.setState(this.baseState);\r\n        this.props.refresh();\r\n    }\r\n\r\n    render() {\r\n        const { name, price, category, description, err } = this.state;\r\n        const { isAdd, mode } = this.props;\r\n        if (!isAdd) {\r\n            return false\r\n        }\r\n        return (\r\n            <>\r\n                <form className=\"form__popup\">\r\n                    {(err) ? (<p className=\"err\">** All the fields are required</p>) : \"\"}\r\n                    <fieldset className=\"form__view\">\r\n                        <legend className=\"form__title\">Add New Book</legend>\r\n                        <input\r\n                            className={`form__control${(mode === \"light\") ? \"\" : \"--dark\"}`}\r\n                            placeholder=\"Name\"\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={name || \"\"}\r\n                            onChange={this.changeHandler}\r\n                        />\r\n                        <input\r\n                            className={`form__control${(mode === \"light\") ? \"\" : \"--dark\"}`}\r\n                            type=\"number\"\r\n                            placeholder=\"Price\"\r\n                            name=\"price\"\r\n                            value={price || \"\"}\r\n                            onChange={this.changeHandler}\r\n                        />\r\n                        <select\r\n                            className={`form__control${(mode === \"light\") ? \"\" : \"--dark\"}`}\r\n                            type=\"text\"\r\n                            name=\"category\"\r\n                            value={category || \"\"}\r\n                            onChange={this.changeHandler} >\r\n                            <option value=\"classics\">classics</option>\r\n                            <option value=\"horror\">horror</option>\r\n                            <option value=\"comic\">comic</option>\r\n                            <option value=\"programming\">programming</option>\r\n                            <option value=\"fantacy\">fantacy</option>\r\n                            <option value=\"historical \">historical</option>\r\n                        </select>\r\n                        <textarea\r\n                            className={`form__control${(mode === \"light\") ? \"\" : \"--dark\"} form__textarea `}\r\n                            placeholder=\"Talk more about this book\"\r\n                            type=\"text\"\r\n                            name=\"description\"\r\n                            value={description || \"\"}\r\n                            onChange={this.changeHandler}\r\n                        />\r\n\r\n                        <button className=\"btn__info\" type=\"submit\" onClick={this.AddNewBook}>Add Book</button>\r\n                        <button className=\"btn__warning\" type=\"reset\" onClick={this.cancelHandler}>Cancel</button>\r\n                    </fieldset>\r\n\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddBook;","import React, { Component } from \"react\";\r\nimport Database from \"../../database/BookList\";\r\n\r\nclass EditBook extends Component {\r\n\r\n    state = {\r\n        id: this.props.database.id,\r\n        name: this.props.database.name,\r\n        price: this.props.database.price,\r\n        category: this.props.database.category,\r\n        description: this.props.database.description,\r\n        err: false\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    editHandler = (e) => {\r\n        e.preventDefault();\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n        if (this.state.name === \"\" || this.state.price === \"\" || this.state.description === \"\") {\r\n            this.setState({ err: true })\r\n        } else {\r\n            this.setState({ err: false })\r\n            Database.data.forEach(item => {\r\n                if (item.id === this.state.id) {\r\n                    item.name = this.state.name;\r\n                    item.price = this.state.price;\r\n                    item.category = this.state.category;\r\n                    item.description = this.state.description;\r\n                }\r\n            })\r\n            this.props.refresh();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { name, price, category, description, err } = this.state;\r\n        const { isEdit, refresh, mode } = this.props;\r\n        if (!isEdit) {\r\n            return false;\r\n        }\r\n        return (\r\n            <>\r\n                <form className=\"form__popup\">\r\n                    {(err) ? (<p className=\"err\">** All the fields are required</p>) : \"\"}\r\n                    <fieldset className=\"form__view\">\r\n                        <legend className=\"form__title\">Edit Selected Book</legend>\r\n                        <input\r\n                            className={`form__control${(mode === \"light\") ? \"\" : \"--dark\"}`}\r\n                            type=\"text\"\r\n                            placeholder=\"Name\"\r\n                            name=\"name\"\r\n                            value={name || \"\"}\r\n                            onChange={this.changeHandler} />\r\n                        <input\r\n                            className={`form__control${(mode === \"light\") ? \"\" : \"--dark\"}`}\r\n                            type=\"number\"\r\n                            placeholder=\"Price\"\r\n                            name=\"price\"\r\n                            value={price || \"\"}\r\n                            onChange={this.changeHandler} />\r\n                        <select\r\n                            className={`form__control${(mode === \"light\") ? \"\" : \"--dark\"}`}\r\n                            type=\"text\"\r\n                            name=\"category\"\r\n                            value={category || \"\"}\r\n                            onChange={this.changeHandler}>\r\n                            <option value=\"classics\">classics</option>\r\n                            <option value=\"horror\">horror</option>\r\n                            <option value=\"comic\">comic</option>\r\n                            <option value=\"programming\">programming</option>\r\n                            <option value=\"fantacy\">fantacy</option>\r\n                            <option value=\"historical \">historical</option>\r\n                        </select>\r\n                        <textarea\r\n                            className={`form__control${(mode === \"light\") ? \"\" : \"--dark\"} form__textarea`}\r\n                            type=\"text\"\r\n                            placeholder=\"Talk more about this book\"\r\n                            name=\"description\"\r\n                            value={description || \"\"}\r\n                            onChange={this.changeHandler} />\r\n\r\n                        <button className=\"btn__info\" type=\"submit\" onClick={this.editHandler}>Edit</button>\r\n                        <button className=\"btn__warning\" type=\"button\" onClick={refresh}>Cancel</button>\r\n                    </fieldset>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default EditBook;","import React, { Component } from \"react\";\r\nimport Switch from \"react-switch\";\r\nimport { ThemeContext } from \"../Theme/Theme\";\r\nimport AddBook from \"./AddBook\";\r\nimport Database from \"../../database/BookList\";\r\nimport EditBook from \"./EditBook\";\r\nimport \"./bookstore.css\";\r\n\r\nclass BookStore extends Component {\r\n\r\n    static contextType = ThemeContext;\r\n\r\n    state = {\r\n        booklist: [],\r\n        isAdd: null,\r\n        isEdit: null,\r\n        filteredId: null,\r\n        checked: false,\r\n        mode: \"light\"\r\n    }\r\n\r\n    getDatabase = () => {\r\n        this.setState({\r\n            booklist: Database.data,\r\n            isAdd: false,\r\n            isEdit: false,\r\n            filteredId: \"\",\r\n        })\r\n    }\r\n\r\n    addToBookList = () => {\r\n        this.setState({\r\n            isAdd: true\r\n        })\r\n    }\r\n\r\n    editToBookList = (itemId) => {\r\n        this.setState({\r\n            isEdit: true,\r\n            filteredId: itemId\r\n        })\r\n    }\r\n\r\n    deleteFromBookList = (delItem) => {\r\n        Database.data.splice(delItem, 1);\r\n        this.getDatabase();\r\n    }\r\n\r\n    handleChange = (checked) => {\r\n        if (checked === true) {\r\n            this.setState({ checked, mode: \"dark\" })\r\n        } else {\r\n            this.setState({ checked, mode: \"light\" })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDatabase();\r\n    }\r\n\r\n\r\n    render() {\r\n        const { booklist, isAdd, isEdit, filteredId, mode } = this.state;\r\n        const newTheme = this.context.theme[mode];\r\n        return (\r\n            <div className=\"container\" style={newTheme}>\r\n                <header className={`header block${(mode === \"light\") ? \"\" : \"--dark\"}`}>\r\n                    <h1 className=\"header__title\">Welcome To Our Book Store</h1>\r\n                    <div className=\"header__mode\">\r\n                        <h3 className=\"header__mode--title\">Dark Mode:</h3>\r\n                        <Switch onChange={this.handleChange} checked={this.state.checked} />\r\n                    </div>\r\n                </header>\r\n                <main className=\"main\">\r\n                    <section className=\"btn btn--sideR\">\r\n                        <button className=\"btn__add\" onClick={this.addToBookList}>+</button>\r\n                        <AddBook isAdd={isAdd} refresh={this.getDatabase} mode={mode} />\r\n                    </section>\r\n                    <section className={`bookList block${(mode === \"light\") ? \"\" : \"--dark\"}`}>\r\n                        <ul className=\"table table--label\">\r\n                            <li className=\"table__head\">Name</li>\r\n                            <li className=\"table__head\">Price</li>\r\n                            <li className=\"table__head\">Category</li>\r\n                            <li className=\"table__head\">Operation</li>\r\n                        </ul>\r\n                        {booklist.map((item, index) => {\r\n                            return (\r\n                                <ul className=\"table\" key={index}>\r\n                                    <li className=\"table__list\">\r\n                                        <button className=\"btn__link\" onClick={() => this.editToBookList(item.id)}>{item.name}</button>\r\n                                    </li>\r\n                                    <li className=\"table__list\">{\"$\" + item.price}</li>\r\n                                    <li className=\"table__list\">{item.category}</li>\r\n                                    <li className=\"table__list\">\r\n                                        <button className=\"btn__delete\" onClick={() => this.deleteFromBookList(index)}>DELETE</button>\r\n                                    </li>\r\n                                </ul>\r\n                            )\r\n                        })}\r\n                        {\r\n                            (filteredId !== null && filteredId !== \"\") ? (\r\n                                <EditBook isEdit={isEdit} database={booklist.find(findItem => findItem.id === filteredId)} refresh={this.getDatabase} mode={mode} />\r\n                            ) : (\"\")\r\n                        }\r\n\r\n                    </section>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default BookStore;","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport BookStore from \"./components/BookStore/BookStore\";\n\nconst App = () => {\n\n  return (\n    <BrowserRouter>\n      <Route path={\"/\"} component={BookStore} />\n    </BrowserRouter>\n  )\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeContext, theme } from \"./components/Theme/Theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeContext.Provider value={{ theme }}>\n      <App />\n    </ThemeContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","exports.data = [\r\n\r\n    {\r\n        \"id\": \"1\",\r\n        \"name\": \"JavaScript\",\r\n        \"price\": \"65.40\",\r\n        \"category\": \"programming\",\r\n        \"description\" : \"This is a programming book that will teach you the fundamental accepts in JS with the latest changes.\"\r\n    },\r\n    {\r\n        \"id\": \"2\",\r\n        \"name\": \"Android Programming\",\r\n        \"price\": \"75.99\",\r\n        \"category\": \"programming\",\r\n        \"description\" : \"Android Programming: The Big Nerd Ranch Guide: is an introductory Android book for programmers with Java experience.\"\r\n    },\r\n    {\r\n        \"id\": \"3\",\r\n        \"name\": \"HTML & CSS\",\r\n        \"price\": \"35.40\",\r\n        \"category\": \"programming\",\r\n        \"description\" : \"A full-color introduction to the basics of HTML and CSS\"\r\n    }\r\n\r\n]"],"sourceRoot":""}